extends main_nonacademic

block content
    .container-fluid.py-4
        .row
            .col-lg-0.mb-xl-0.mb-4
                .card
                    .card-header.pb-0.bg-transparent
                        h6.text-capitalize Search Attendance
                    .card-body.p-3.text-center
                        .row.justify-content-center
                            .col-lg-4.col-xs-0 
                                .d-flex.align-items-center
                                    .d-flex.flex-column.w-90
                                        h6.text-dark.text-sm Batch
                                        select#batch_select.form-select.text-xs.me-8.pe-5.ms-0.mt-1.mb-3.lh-lg4
                                            each batch in batches 
                                                option(value=batch.id) Batch #{batch.Batch}
                            .col-lg-4.col-xs-0 
                                .d-flex.align-items-center
                                    .d-flex.flex-column.w-90
                                        h6.text-dark.text-sm Degree
                                        select#degree_select.form-select.text-xs.me-8.pe-5.ms-0.mt-1.mb-3.lh-lg4
                                            each degree in degrees 
                                                option(value=degree.id) #{degree.Degree}    
                                            
                        .row   
                            .col-lg-0.text-center
                                button.btn.btn-primary.btn-sm.mt-3.ps-7.pe-7(onclick="searchAttendance()") Search
        .row#attendance_row.mt-3.invisible
            .col-lg-0.mb-xl-0.mb-4
                .card
                    .card-header.pb-0.pt-3.bg-transparent
                        h6.text-capitalize Attendance
                    .card-body.p-3
                        .table-responsive
                            //Class limited-rows-table - used to specify the max height and make scrollbars visible
                            table#attendance_table.table.align-items-center
                                tbody#attendance_table_body
                                                        

    script.

        var batches,degrees; // selectedSessionID - value is assigned for this when an user select a session from session
        $(document).ready(function() {
            batches = JSON.parse(JSON.stringify(!{JSON.stringify(batches)}));
            degrees = JSON.parse(JSON.stringify(!{JSON.stringify(degrees)}));
            sideBarChange();
        });

        // HIGHLIGHTING RELATED OPTION IN SIDEBAR
        function sideBarChange(){
            //console.log(modules);
            document.getElementById("students-nav-link").classList.remove('active');
            document.getElementById("today-nav-link").classList.remove('active');
            document.getElementById("pastreports-nav-link").classList.add('active');
            document.getElementById("students-nav-link").classList.remove('active');
            document.getElementById("semester-nav-link").classList.remove('active');
        }

        var win = navigator.platform.indexOf('Win') > -1;
        if (win && document.querySelector('#sidenav-scrollbar')) {
            var options = {
                damping: '0.5'
            }
            Scrollbar.init(document.querySelector('#sidenav-scrollbar'), options);
        }

        // SEARCH SESSIONS AFTER CLICKING SEARCH
        function searchAttendance(){
            let selectedBatch = document.getElementById("batch_select").value;
            let selectedDegree = document.getElementById("degree_select").value;
            
            let validModule = false;

            for(batch of batches){
                if(batch.Batch == selectedBatch){
                    selectedBatch = batch.id;
                    break;
                }
            }

            for(degree of degrees){
                if(degree.Degree == selectedDegree){
                    selectedDegree = degree.id;
                    break;
                }
            }

            $.ajax({
                    type: 'GET',
                    url: '/nac/degreeattendance/get',
                    //headers: {'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')},
                    data: {
                        batch: selectedBatch,
                        degree: selectedDegree,
                    },
                    dataType: 'json',
                    encode: true
                }).done(function (response) {
                    console.log(response);
                    if(response.status=='200'){
                        console.log('success');
                        console.log(response.groups);
                        console.log(response.students);
                        showAttendance(response.groups,response.students);
                    }else{
                        console.log('error');
                        window.alert("Error occured while loading attendance")
                    }
                });

        }

        function showAttendance(groups,students){
            var attendance_table_row = document.getElementById("attendance_row");
            var attendance_table = document.getElementById("attendance_table_body");

            clearSelectOptions(attendance_table);

            if(students.length != 0){
                for(student of students){
                    let row,cell,element_p,element_h6,rowCount;
                    rowCount = attendance_table.rows.length;
                    row = attendance_table.insertRow(rowCount);
                    row.classList.add("limited-rows-tr");
                    row.classList.add("selection-row");
                    row.setAttribute("data-id",student.id);
            
                    cell = row.insertCell(0);
                    element_p = createTable_p_element('Index No :');
                    cell.appendChild(element_p);
                    element_h6 = createTable_h6_element(student.IndexNo);
                    cell.appendChild(element_h6);

                    cell = row.insertCell(1);
                    element_p = createTable_p_element('Name :');
                    cell.appendChild(element_p);
                    element_h6 = createTable_h6_element(student.Name);
                    cell.appendChild(element_h6);
                    
                    let cellCount = 2;
                    for(group of groups){
                        cell = row.insertCell(cellCount);
                        element_p = createTable_p_element(group.ModuleCode + ' :');
                        cell.appendChild(element_p);
                        element_h6 = createTable_h6_element(student[group.Module] + '%');
                        cell.appendChild(element_h6);

                        cellCount++;
                    }
                }
                    attendance_table_row.classList.remove("invisible");
            }else{
                attendance_table_row.classList.add("invisible");
                attendance_table_row.classList.add("invisible");
                window.alert('No sessions for this filter');
            }                

        }

        // Functions for styling dynamic tables - paragraph element
        function createTable_p_element(innerHTML){
            let element_p = document.createElement("p");
            element_p.classList.add("text-xs");
            element_p.classList.add("font-weight-bold");
            element_p.classList.add("mb-0");
            element_p.innerHTML = innerHTML;
            return element_p;
        }

        // Functions for styling dynamic tables - h6 element
        function createTable_h6_element(innerHTML){
            let element_h6 = document.createElement("h6");
            element_h6.classList.add("text-sm");
            element_h6.classList.add("mb-0");
            element_h6.innerHTML = innerHTML;
            return element_h6;
        }
        
        function clearSelectOptions(element){
            element.innerHTML = '';
        }