extends main_nonacademic

block content
    .container-fluid.py-4
        .row
            .col-md-4
                .card.card-profile
                    img.card-img-top(src='../static/assets/img/banners/fit_banner.jpg' alt='Image placeholder')
                    .row.justify-content-center
                        .col-4.col-lg-4.order-lg-2
                            .mt-n4.mt-lg-n6.mb-4.mb-lg-0
                                a(href='javascript:;')
                                    img.rounded-circle.img-fluid.border.border-2.border-white(src='../static/assets/img/icons/student2.jpeg')
                    .card-body.pt-0
                        .text-center.mt-4
                            h5
                                | #{student[0].Name}
                            .h6.font-weight-300
                                i.ni.location_pin.mr-2
                                | Faculty of Information Technology
                            .h6.mt-4
                                i.ni.ni-building.me-2
                                | #{student[0].Degree}
                            div
                                i.ni.ni-badge.me-2
                                | Batch #{student[0].Batch}
                            div.mt-6.align-items-center.text-center
                                i.ni.ni-compass-04.me-2
                                span.text-sm #{student[0].Address}
                            div.mt-2.align-items-center.text-center
                                i.ni.ni-compass-04.me-2
                                span.text-sm #{student[0].Telephone}
                            div.mt-2.align-items-center.text-center
                                i.ni.ni-email-83.me-2
                                span.text-sm #{student[0].Email}
            .col-md-8
                .row
                    .card
                        .card-header.pb-0.pt-3.bg-transparent
                            h6.text-capitalize Attendance : Module-wise
                        .card-body.p-3
                            .table-responsive
                                //Class limited-rows-table - used to specify the max height and make scrollbars visible
                                table#modules_table.table.align-items-center
                                    tbody#modules_table_body
                                        each module in modules
                                            tr.clickable-row(data-id=module.id onclick = ("rowSelect(this)"))
                                                td.w-30
                                                    .d-flex.px-2.py-1.align-items-center
                                                        div
                                                            img(src='../static/assets/img/icons/books.png' alt='Icon')
                                                        .ms-4
                                                            p.text-xs.font-weight-bold.mb-0 Module:
                                                            h6.text-sm.mb-0 #{module.Name}
                                                each group in groups 
                                                    if(group.Module==module.id)
                                                        td
                                                            .text-center
                                                            p.text-xs.font-weight-bold.mb-0 Group:
                                                            h6.text-sm.mb-0 #{group.Name}
                                                        
                                                        each row in attendance 
                                                            if(row[1].group == group.id)
                                                                td
                                                                    .text-center
                                                                    p.text-xs.font-weight-bold.mb-0 Attendance:
                                                                    h6.text-sm.mb-0 #{row[2].percentage}%
                                                                td
                                                                    .text-center
                                                                    p.text-xs.font-weight-bold.mb-0 Sessions:
                                                                    h6.text-sm.mb-0 #{row[2].session_count}
                .row
                    .card.mt-3
                        .card-header.pb-0.pt-3.bg-transparent
                            h6.text-capitalize Attendance : Session-wise
                            h6.mb-1.mt-3.text-dark.text-sm Select Module
                            select.form-select.text-xs.me-8.pe-5.ms-0.mt-1#module_select(onchange="onModuleSelectForAttendance()")
                                each module in modules
                                    option(value=module.id) #{module.Code} - #{module.Name}
                        .card-body.p-3
                            .table-responsive
                                //Class limited-rows-table - used to specify the max height and make scrollbars visible
                                table#sessions_table.table.align-items-center
                                    tbody#sessions_table_body
                                        
                                                                                                  

    script.
        var modules,groups,attendance,sessions;
        $(document).ready(function() {
            
            modules = JSON.parse(JSON.stringify(!{JSON.stringify(modules)}));
            groups = JSON.parse(JSON.stringify(!{JSON.stringify(groups)}));
            attendance = JSON.parse(JSON.stringify(!{JSON.stringify(attendance)}));
            sessions = JSON.parse(JSON.stringify(!{JSON.stringify(sessions)}));

            /*$(".clickable-row").click(function() {
                let data = $(this).data("id");
                console.log(data);
                //window.location = $(this).data("href");
            });*/
            sideBarChange();
            onModuleSelectForAttendance();
        });

        function sideBarChange(){
            document.getElementById("students-nav-link").classList.add('active');
            document.getElementById("today-nav-link").classList.remove('active');
            document.getElementById("pastreports-nav-link").classList.remove('active');
            document.getElementById("students-nav-link").classList.remove('active');
            document.getElementById("semester-nav-link").classList.remove('active');
        }

        function rowSelect(element){
            let data = element
            console.log(data.dataset.id);
        }

        function onModuleSelectForAttendance(){
            var module_selected = document.getElementById("module_select").value;
            console.log("module = " + module_selected);
            console.log(attendance);
            //var modules_table_row = document.getElementById("modules_table_row");
            var sessions_table = document.getElementById("sessions_table_body");
            clearSelectOptions(sessions_table);

            let relevant_group;
            if(attendance.length!=0){
                let row,cell,element_p,element_h6,rowCount;
                let group; 

                for(grp in groups){
                    if(groups[grp].Module == module_selected){
                        group = groups[grp].id;
                    }
                }
                console.log('Group : ' + group);
                for(att_row in attendance){
                    if(attendance[att_row][1].group == group){
                        //console.log(attendance[row][0]);
                        for(key in attendance[att_row][0]){
                            
                            if(key != 'id' && key != 'Student'){  
                                rowCount = sessions_table.rows.length;
                                row = sessions_table.insertRow(rowCount);
                                cell = row.insertCell(0);

                                //Session Date & Time
                                for(session in sessions){
                                    if(sessions[session].id == key.substring(3,key.length)){
                                        element_p = document.createElement("p");
                                        element_p.classList.add("text-xs");
                                        element_p.classList.add("font-weight-bold");
                                        element_p.classList.add("mb-0");
                                        element_p.innerHTML = 'Date :';
                                        cell.appendChild(element_p);
                                        element_h6 = document.createElement("h6");
                                        element_h6.classList.add("text-sm");
                                        element_h6.classList.add("mb-0");
                                        
                                        element_h6.innerHTML = sessions[session].Start_time.substring(0,10);
                                        cell.appendChild(element_h6);

                                        cell = row.insertCell(1);
                                        element_p = document.createElement("p");
                                        element_p.classList.add("text-xs");
                                        element_p.classList.add("font-weight-bold");
                                        element_p.classList.add("mb-0");
                                        element_p.innerHTML = 'Time :';
                                        cell.appendChild(element_p);
                                        element_h6 = document.createElement("h6");
                                        element_h6.classList.add("text-sm");
                                        element_h6.classList.add("mb-0");
                                        
                                        element_h6.innerHTML = sessions[session].Start_time.substring(11,19);
                                        cell.appendChild(element_h6);

                                        break;
                                    }
                                }
                                
                                cell = row.insertCell(2);
                                element_p = document.createElement("p");
                                element_p.classList.add("text-xs");
                                element_p.classList.add("font-weight-bold");
                                element_p.classList.add("mb-0");
                                
                                element_h6 = document.createElement("h6");
                                element_h6.classList.add("text-sm");
                                element_h6.classList.add("mb-0");
                                        
                                if(checkValidTimeStamp(attendance[att_row][0][key])){
                                   element_p.innerHTML = 'Presence :'; 
                                   element_h6.innerHTML = attendance[att_row][0][key];
                                }else if(attendance[att_row][0][key]==0){
                                   element_p.innerHTML = 'Presence :'; 
                                   element_h6.innerHTML = 'Absent'; 
                                }else{
                                    element_p.innerHTML = 'Medical Form :'; 
                                    element_h6.innerHTML = attendance[att_row][0][key];
                                }
                                cell.appendChild(element_p);
                                
                                cell.appendChild(element_h6);
                                
                                
                            }               
                        }
                    }
                }
            }
        }

        function checkValidTimeStamp(timestamp){
            if(timestamp.length!=8){
                return false;
            }
            if(timestamp.substring(2,3) == ':' && timestamp.substring(5,6) == ':'){
                return true;
            }else{
                return false;
            }
        }

        function clearSelectOptions(element){
            element.innerHTML = "";
        }

        var win = navigator.platform.indexOf('Win') > -1;
        if (win && document.querySelector('#sidenav-scrollbar')) {
            var options = {
                damping: '0.5'
            }
            Scrollbar.init(document.querySelector('#sidenav-scrollbar'), options);
        }

        